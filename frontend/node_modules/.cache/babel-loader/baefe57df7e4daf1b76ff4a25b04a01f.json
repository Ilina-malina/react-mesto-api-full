{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this.addCard = card => {\n      return fetch(this._baseUrl + '/cards', {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify(card)\n      }).then(res => {\n        return this._checkStatus(res);\n      });\n    };\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  editUserInfo(name, about) {\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  editUserAvatar(avatar) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  putLike(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId + '/likes', {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  deleteLike(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId + '/likes', {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-50',\n  headers: {\n    authorization: 'f0e9ad6e-8bb9-454b-8868-fba36d2de17c',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","baseUrl","headers","addCard","card","fetch","_baseUrl","method","_headers","body","JSON","stringify","then","res","_checkStatus","getInitialCards","deleteCard","cardId","getUserInfo","editUserInfo","name","about","editUserAvatar","avatar","putLike","deleteLike","ok","json","Promise","reject","status","api","authorization"],"sources":["/Users/ilina/Projects/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {\n          headers: this._headers\n        })\n          .then((res) => {\n            return this._checkStatus(res);\n          })\n    }\n\n    addCard = (card) => {\n        return fetch(this._baseUrl + '/cards', {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify(card)\n        })\n        .then((res) => {\n          return this._checkStatus(res);\n        })\n    }\n\n    deleteCard(cardId) {\n        return fetch(this._baseUrl + '/cards/' + cardId, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n        .then((res) => {\n          return this._checkStatus(res);\n        })\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {\n            headers: this._headers\n          })\n          .then((res) => {\n            return this._checkStatus(res);\n          })\n    }\n\n    editUserInfo(name, about) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({name, about})\n          })\n          .then((res) => {\n            return this._checkStatus(res);\n          })\n    }\n\n    editUserAvatar(avatar) {\n        return fetch(this._baseUrl + '/users/me/avatar', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({avatar})\n          })\n          .then((res) => {\n            return this._checkStatus(res);\n          })\n    }\n\n    putLike(cardId) {\n        return fetch(this._baseUrl + '/cards/' + cardId + '/likes', {\n            method: 'PUT',\n            headers: this._headers\n          })\n          .then((res) => {\n            return this._checkStatus(res);\n          })\n    }\n\n    deleteLike(cardId) {\n        return fetch(this._baseUrl + '/cards/' + cardId + '/likes', {\n            method: 'DELETE',\n            headers: this._headers\n          })\n          .then((res) => {\n            return this._checkStatus(res);\n          })\n    }\n\n    _checkStatus(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-50',\n      headers: {\n      authorization: 'f0e9ad6e-8bb9-454b-8868-fba36d2de17c',\n      'Content-Type': 'application/json'\n    }\n  }); "],"mappings":"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"},"metadata":{},"sourceType":"module"}