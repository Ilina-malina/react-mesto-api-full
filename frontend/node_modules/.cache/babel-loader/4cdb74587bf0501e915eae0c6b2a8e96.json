{"ast":null,"code":"import React from 'react';\nconst BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(res);\n};\nexport const login = async (email, password) => {\n  console.log('await');\n  const res = await fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  console.log('awaited');\n  console.log(checkResponse(res));\n  return checkResponse(res);\n};\nexport const checkToken = async token => {\n  const res = await fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  return checkResponse(res);\n};\nconst checkResponse = res => res.ok ? res.json() : Promise.reject(`Error: ${res.statusText}`);","map":{"version":3,"names":["React","BASE_URL","register","email","password","res","fetch","method","headers","body","JSON","stringify","checkResponse","login","console","log","checkToken","token","ok","json","Promise","reject","statusText"],"sources":["/Users/ilina/Projects/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["import React from 'react';\n\nconst BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = async (email, password) => {\n    const res = await fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({email, password})\n    });\n    return checkResponse(res);\n}\n\nexport const login = async (email, password) => {\n    console.log('await');\n    const res = await fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({email, password})\n    });\n    console.log('awaited');\n    console.log(checkResponse(res));\n    return checkResponse(res);\n    \n}\n\nexport const checkToken = async (token) => {\n    const res = await fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${token}`\n        }\n    });\n    return checkResponse(res);\n}\n\nconst checkResponse = res => res.ok ? res.json() : Promise.reject(`Error: ${res.statusText}`);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,OAAO,MAAMC,QAAQ,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC/C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IAC1CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,KAAK;MAAEC;IAAQ,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOQ,aAAa,CAACP,GAAG,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMQ,KAAK,GAAG,OAAOV,KAAK,EAAEC,QAAQ,KAAK;EAC5CU,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IAC1CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,KAAK;MAAEC;IAAQ,CAAC;EAC1C,CAAC,CAAC;EACFU,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtBD,OAAO,CAACC,GAAG,CAACH,aAAa,CAACP,GAAG,CAAC,CAAC;EAC/B,OAAOO,aAAa,CAACP,GAAG,CAAC;AAE7B,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG,MAAOC,KAAK,IAAK;EACvC,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,WAAU,EAAE;IAC5CM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASS,KAAM;IACtC;EACJ,CAAC,CAAC;EACF,OAAOL,aAAa,CAACP,GAAG,CAAC;AAC7B,CAAC;AAED,MAAMO,aAAa,GAAGP,GAAG,IAAIA,GAAG,CAACa,EAAE,GAAGb,GAAG,CAACc,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,UAAShB,GAAG,CAACiB,UAAW,EAAC,CAAC"},"metadata":{},"sourceType":"module"}