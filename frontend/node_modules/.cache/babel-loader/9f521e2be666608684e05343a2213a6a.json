{"ast":null,"code":"import React from \"react\";\nconst BASE_URL = \"http://moe-mesto.nomoredomains.club\";\nexport const register = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(res);\n};\nexport const login = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(res);\n};\nexport const checkToken = async token => {\n  const res = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return checkResponse(res);\n};\nconst checkResponse = res => res.ok ? res.json() : Promise.reject(`Error: ${res.statusText}`);","map":{"version":3,"names":["React","BASE_URL","register","email","password","res","fetch","method","headers","body","JSON","stringify","checkResponse","login","Accept","checkToken","token","Authorization","ok","json","Promise","reject","statusText"],"sources":["/Users/ilina/Projects/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["import React from \"react\";\n\nconst BASE_URL = \"http://moe-mesto.nomoredomains.club\";\n\nexport const register = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  return checkResponse(res);\n};\n\nexport const login = async (email, password) => {\n  const res = await fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  return checkResponse(res);\n};\n\nexport const checkToken = async (token) => {\n  const res = await fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return checkResponse(res);\n};\n\nconst checkResponse = (res) =>\n  res.ok ? res.json() : Promise.reject(`Error: ${res.statusText}`);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,OAAO,MAAMC,QAAQ,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;EACjD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IAC5CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOQ,aAAa,CAACP,GAAG,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMQ,KAAK,GAAG,OAAOV,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IAC5CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPM,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDL,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOQ,aAAa,CAACP,GAAG,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,WAAU,EAAE;IAC9CM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAG,UAASD,KAAM;IACjC;EACF,CAAC,CAAC;EACF,OAAOJ,aAAa,CAACP,GAAG,CAAC;AAC3B,CAAC;AAED,MAAMO,aAAa,GAAIP,GAAG,IACxBA,GAAG,CAACa,EAAE,GAAGb,GAAG,CAACc,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,UAAShB,GAAG,CAACiB,UAAW,EAAC,CAAC"},"metadata":{},"sourceType":"module"}